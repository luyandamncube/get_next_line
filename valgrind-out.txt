==24354== Memcheck, a memory error detector
==24354== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==24354== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==24354== Command: ./run small.txt
==24354== Parent PID: 24353
==24354== 
--24354-- 
--24354-- Valgrind options:
--24354--    --leak-check=full
--24354--    --show-leak-kinds=all
--24354--    --track-origins=yes
--24354--    --verbose
--24354--    --log-file=valgrind-out.txt
--24354-- Contents of /proc/version:
--24354--   Linux version 4.13.0-43-generic (buildd@lgw01-amd64-059) (gcc version 7.2.0 (Ubuntu 7.2.0-8ubuntu3.2)) #48-Ubuntu SMP Wed May 16 12:18:01 UTC 2018
--24354-- 
--24354-- Arch and hwcaps: X86, LittleEndian, x86-mmxext-sse1-sse2-sse3
--24354-- Page sizes: currently 4096, max supported 4096
--24354-- Valgrind library directory: /usr/local/lib/valgrind
--24354-- Reading syms from /home/lmncube/Documents/get_next_line/run
--24354-- Reading syms from /lib/i386-linux-gnu/ld-2.26.so
--24354--   Considering /lib/i386-linux-gnu/ld-2.26.so ..
--24354--   .. CRC mismatch (computed 35ecc3bc wanted cac36749)
--24354--   Considering /usr/lib/debug/lib/i386-linux-gnu/ld-2.26.so ..
--24354--   .. CRC is valid
--24354-- Reading syms from /usr/local/lib/valgrind/memcheck-x86-linux
--24354--    object doesn't have a dynamic symbol table
--24354-- Scheduler: using generic scheduler lock implementation.
--24354-- Reading suppressions file: /usr/local/lib/valgrind/default.supp
==24354== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-24354-by-lmncube-on-???
==24354== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-24354-by-lmncube-on-???
==24354== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-24354-by-lmncube-on-???
==24354== 
==24354== TO CONTROL THIS PROCESS USING vgdb (which you probably
==24354== don't want to do, unless you know exactly what you're doing,
==24354== or are doing some strange experiment):
==24354==   /usr/local/lib/valgrind/../../bin/vgdb --pid=24354 ...command...
==24354== 
==24354== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==24354==   /path/to/gdb ./run
==24354== and then give GDB the following command
==24354==   target remote | /usr/local/lib/valgrind/../../bin/vgdb --pid=24354
==24354== --pid is optional if only one valgrind process is running
==24354== 
--24354-- REDIR: 0x401acc0 (ld-linux.so.2:strlen) redirected to 0x58055b43 (vgPlain_x86_linux_REDIR_FOR_strlen)
--24354-- REDIR: 0x401a9d0 (ld-linux.so.2:index) redirected to 0x58055b1e (vgPlain_x86_linux_REDIR_FOR_index)
--24354-- Reading syms from /usr/local/lib/valgrind/vgpreload_core-x86-linux.so
--24354-- Reading syms from /usr/local/lib/valgrind/vgpreload_memcheck-x86-linux.so
==24354== WARNING: new redirection conflicts with existing -- ignoring it
--24354--     old: 0x0401acc0 (strlen              ) R-> (0000.0) 0x58055b43 vgPlain_x86_linux_REDIR_FOR_strlen
--24354--     new: 0x0401acc0 (strlen              ) R-> (2007.0) 0x04831fc0 strlen
--24354-- Reading syms from /lib/i386-linux-gnu/libc-2.26.so
--24354--   Considering /lib/i386-linux-gnu/libc-2.26.so ..
--24354--   .. CRC mismatch (computed 77117af7 wanted 6228a78d)
--24354--   Considering /usr/lib/debug/lib/i386-linux-gnu/libc-2.26.so ..
--24354--   .. CRC is valid
--24354-- REDIR: 0x48d5540 (libc.so.6:strncasecmp) redirected to 0x4829561 (_vgnU_ifunc_wrapper)
--24354-- REDIR: 0x48dbcc0 (libc.so.6:memrchr) redirected to 0x4829561 (_vgnU_ifunc_wrapper)
--24354-- REDIR: 0x48ee740 (libc.so.6:wcslen) redirected to 0x4829561 (_vgnU_ifunc_wrapper)
--24354-- REDIR: 0x48d39d0 (libc.so.6:__GI_strrchr) redirected to 0x4831970 (__GI_strrchr)
--24354-- REDIR: 0x48cf760 (libc.so.6:malloc) redirected to 0x482f1be (malloc)
--24354-- REDIR: 0x48cfc70 (libc.so.6:free) redirected to 0x48301ef (free)
--24354-- REDIR: 0x48d73b0 (libc.so.6:strchrnul) redirected to 0x4836430 (strchrnul)
--24354-- REDIR: 0x48d5160 (libc.so.6:__GI_mempcpy) redirected to 0x4836660 (__GI_mempcpy)
--24354-- REDIR: 0x48d37b0 (libc.so.6:__GI_strlen) redirected to 0x4831f40 (__GI_strlen)
==24354== Conditional jump or move depends on uninitialised value(s)
==24354==    at 0x4830219: free (vg_replace_malloc.c:530)
==24354==    by 0x108DA7: ft_strdel (ft_strdel.c:19)
==24354==    by 0x108783: ft_getline (get_next_line.c:48)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x108A24: main (main.c:42)
==24354==  Uninitialised value was created by a stack allocation
==24354==    at 0x108664: ft_getline (get_next_line.c:22)
==24354== 
==24354== Invalid free() / delete / delete[] / realloc()
==24354==    at 0x4830259: free (vg_replace_malloc.c:530)
==24354==    by 0x108DA7: ft_strdel (ft_strdel.c:19)
==24354==    by 0x108783: ft_getline (get_next_line.c:48)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x108A24: main (main.c:42)
==24354==  Address 0x48c7949 is in the Text segment of /lib/i386-linux-gnu/libc-2.26.so
==24354==    at 0x48C7949: _IO_file_overflow@@GLIBC_2.1 (fileops.c:799)
==24354== 
==24354== 
==24354== HEAP SUMMARY:
==24354==     in use at exit: 75 bytes in 15 blocks
==24354==   total heap usage: 20 allocs, 6 frees, 1,130 bytes allocated
==24354== 
==24354== Searching for pointers to 15 not-freed blocks
==24354== Checked 44,548 bytes
==24354== 
==24354== 1 bytes in 1 blocks are still reachable in loss record 1 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086F0: ft_getline (get_next_line.c:38)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x1089D7: main (main.c:39)
==24354== 
==24354== 1 bytes in 1 blocks are definitely lost in loss record 2 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086F0: ft_getline (get_next_line.c:38)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x10898A: main (main.c:36)
==24354== 
==24354== 1 bytes in 1 blocks are definitely lost in loss record 3 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086A3: ft_getline (get_next_line.c:31)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x1089D7: main (main.c:39)
==24354== 
==24354== 1 bytes in 1 blocks are definitely lost in loss record 4 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086A3: ft_getline (get_next_line.c:31)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x108A24: main (main.c:42)
==24354== 
==24354== 3 bytes in 1 blocks are definitely lost in loss record 5 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086F0: ft_getline (get_next_line.c:38)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x1088F0: main (main.c:30)
==24354== 
==24354== 3 bytes in 1 blocks are definitely lost in loss record 6 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108D4B: ft_strnew (ft_strnew.c:21)
==24354==    by 0x108BA9: ft_strjoin (ft_strjoin.c:21)
==24354==    by 0x108710: ft_getline (get_next_line.c:40)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x1088F0: main (main.c:30)
==24354== 
==24354== 3 bytes in 1 blocks are definitely lost in loss record 7 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086A3: ft_getline (get_next_line.c:31)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x10893D: main (main.c:33)
==24354== 
==24354== 3 bytes in 1 blocks are definitely lost in loss record 8 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086F0: ft_getline (get_next_line.c:38)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x10893D: main (main.c:33)
==24354== 
==24354== 3 bytes in 1 blocks are definitely lost in loss record 9 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108AB4: ft_strdup (ft_strdup.c:21)
==24354==    by 0x1086A3: ft_getline (get_next_line.c:31)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x10898A: main (main.c:36)
==24354== 
==24354== 5 bytes in 1 blocks are definitely lost in loss record 10 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x1087E9: get_next_line (get_next_line.c:62)
==24354==    by 0x1088F0: main (main.c:30)
==24354== 
==24354== 9 bytes in 1 blocks are definitely lost in loss record 11 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108D4B: ft_strnew (ft_strnew.c:21)
==24354==    by 0x108BA9: ft_strjoin (ft_strjoin.c:21)
==24354==    by 0x108710: ft_getline (get_next_line.c:40)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x10893D: main (main.c:33)
==24354== 
==24354== 11 bytes in 1 blocks are definitely lost in loss record 12 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108D4B: ft_strnew (ft_strnew.c:21)
==24354==    by 0x108BA9: ft_strjoin (ft_strjoin.c:21)
==24354==    by 0x108710: ft_getline (get_next_line.c:40)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x10898A: main (main.c:36)
==24354== 
==24354== 15 bytes in 1 blocks are definitely lost in loss record 13 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108D4B: ft_strnew (ft_strnew.c:21)
==24354==    by 0x108BA9: ft_strjoin (ft_strjoin.c:21)
==24354==    by 0x108710: ft_getline (get_next_line.c:40)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x1089D7: main (main.c:39)
==24354== 
==24354== 16 bytes in 2 blocks are definitely lost in loss record 14 of 14
==24354==    at 0x482F228: malloc (vg_replace_malloc.c:299)
==24354==    by 0x108D4B: ft_strnew (ft_strnew.c:21)
==24354==    by 0x108BA9: ft_strjoin (ft_strjoin.c:21)
==24354==    by 0x10874C: ft_getline (get_next_line.c:45)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x1089D7: main (main.c:39)
==24354== 
==24354== LEAK SUMMARY:
==24354==    definitely lost: 74 bytes in 14 blocks
==24354==    indirectly lost: 0 bytes in 0 blocks
==24354==      possibly lost: 0 bytes in 0 blocks
==24354==    still reachable: 1 bytes in 1 blocks
==24354==         suppressed: 0 bytes in 0 blocks
==24354== 
==24354== ERROR SUMMARY: 15 errors from 15 contexts (suppressed: 0 from 0)
==24354== 
==24354== 1 errors in context 1 of 15:
==24354== Invalid free() / delete / delete[] / realloc()
==24354==    at 0x4830259: free (vg_replace_malloc.c:530)
==24354==    by 0x108DA7: ft_strdel (ft_strdel.c:19)
==24354==    by 0x108783: ft_getline (get_next_line.c:48)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x108A24: main (main.c:42)
==24354==  Address 0x48c7949 is in the Text segment of /lib/i386-linux-gnu/libc-2.26.so
==24354==    at 0x48C7949: _IO_file_overflow@@GLIBC_2.1 (fileops.c:799)
==24354== 
==24354== 
==24354== 1 errors in context 2 of 15:
==24354== Conditional jump or move depends on uninitialised value(s)
==24354==    at 0x4830219: free (vg_replace_malloc.c:530)
==24354==    by 0x108DA7: ft_strdel (ft_strdel.c:19)
==24354==    by 0x108783: ft_getline (get_next_line.c:48)
==24354==    by 0x10881B: get_next_line (get_next_line.c:65)
==24354==    by 0x108A24: main (main.c:42)
==24354==  Uninitialised value was created by a stack allocation
==24354==    at 0x108664: ft_getline (get_next_line.c:22)
==24354== 
==24354== ERROR SUMMARY: 15 errors from 15 contexts (suppressed: 0 from 0)
